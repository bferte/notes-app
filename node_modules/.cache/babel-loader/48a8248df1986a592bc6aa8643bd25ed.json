{"ast":null,"code":"const URL = \"https://api.myidea.fr/v1/\";\nexport function getNotes() {\n  return new Promise((resolve, reject) => {\n    window.fetch(URL + 'notes').then(response => response.json()).then(result => {\n      console.log('Réponse API getNotes', result);\n      resolve(result);\n    }).catch(error => {\n      console.error(error);\n      reject(error);\n    });\n  });\n}\nexport function createNote(note) {\n  if (note.title && note.description) {\n    var body = {\n      title: title,\n      description: description\n    };\n    var params = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=UTF-8'\n      },\n      cache: 'default',\n      body: JSON.stringify(body)\n    };\n    fetch('https://api.myidea.fr/v1/notes', params).then(response => console.log(response)).catch(error => console.error(error));\n  }\n}","map":{"version":3,"sources":["/Users/briacferte/Desktop/DEV/mdc/framework js/exo2 bloc note/notes-app/src/service/Api.js"],"names":["URL","getNotes","Promise","resolve","reject","window","fetch","then","response","json","result","console","log","catch","error","createNote","note","title","description","body","params","method","headers","cache","JSON","stringify"],"mappings":"AAAA,MAAMA,GAAG,GAAG,2BAAZ;AAEA,OAAO,SAASC,QAAT,GAAqB;AACxB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACxCC,IAAAA,MAAM,CAACC,KAAP,CAAaN,GAAG,GAAG,OAAnB,EACCO,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,MAAM,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,MAApC;AACAP,MAAAA,OAAO,CAACO,MAAD,CAAP;AACH,KALD,EAMCG,KAND,CAMOC,KAAK,IAAI;AACZH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACAV,MAAAA,MAAM,CAACU,KAAD,CAAN;AACC,KATL;AAUC,GAXM,CAAP;AAYH;AAED,OAAO,SAASC,UAAT,CAAqBC,IAArB,EAA2B;AAC9B,MAAIA,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACE,WAAvB,EAAoC;AAGhC,QAAIC,IAAI,GAAG;AACPF,MAAAA,KAAK,EAAEA,KADA;AAEPC,MAAAA,WAAW,EAAEA;AAFN,KAAX;AAMA,QAAIE,MAAM,GAAG;AAAEC,MAAAA,MAAM,EAAE,MAAV;AACEC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OADX;AAIEC,MAAAA,KAAK,EAAE,SAJT;AAKEJ,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AALR,KAAb;AAOAb,IAAAA,KAAK,CAAC,gCAAD,EAAmCc,MAAnC,CAAL,CACCb,IADD,CACMC,QAAQ,IAAIG,OAAO,CAACC,GAAR,CAAYJ,QAAZ,CADlB,EAECK,KAFD,CAEOC,KAAK,IAAIH,OAAO,CAACG,KAAR,CAAcA,KAAd,CAFhB;AAID;AACN","sourcesContent":["const URL = \"https://api.myidea.fr/v1/\"\n\nexport function getNotes () {\n    return new Promise((resolve, reject) => {\n    window.fetch(URL + 'notes')\n    .then(response => response.json())\n    .then(result => {\n        console.log('Réponse API getNotes', result)\n        resolve(result)\n    })\n    .catch(error => {\n        console.error(error)\n        reject(error)\n        })\n    })\n}\n\nexport function createNote (note) {\n    if (note.title && note.description) {\n        \n\n        var body = {\n            title: title,\n            description: description\n        }\n\n\n        var params = { method: 'POST',\n                       headers: {\n                           'Content-Type': 'application/json; charset=UTF-8'\n                       },\n                       cache: 'default',\n                       body: JSON.stringify(body)\n                     };\n        fetch('https://api.myidea.fr/v1/notes', params)\n        .then(response => console.log(response))\n        .catch(error => console.error(error))\n\n      }\n}"]},"metadata":{},"sourceType":"module"}